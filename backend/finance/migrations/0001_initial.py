# Generated by Django 4.2.7 on 2025-06-05 15:51

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FinancialSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of the financial summary', unique=True)),
                ('total_rent_due', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total rent due for the date', max_digits=15)),
                ('total_rent_collected', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total rent collected for the date', max_digits=15)),
                ('total_outstanding', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total outstanding amount', max_digits=15)),
                ('total_properties', models.PositiveIntegerField(default=0, help_text='Total number of active properties')),
                ('total_units', models.PositiveIntegerField(default=0, help_text='Total number of active units')),
                ('occupied_units', models.PositiveIntegerField(default=0, help_text='Number of occupied units')),
                ('occupancy_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Occupancy rate percentage', max_digits=5)),
                ('collection_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Collection rate percentage', max_digits=5)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Financial Summary',
                'verbose_name_plural': 'Financial Summaries',
                'db_table': 'finance_summary',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(help_text='Unique invoice number', max_length=50, unique=True)),
                ('issue_date', models.DateField(default=django.utils.timezone.now, help_text='Date invoice was issued')),
                ('due_date', models.DateField(help_text='Payment due date')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Invoice amount in ZAR', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('invoice_type', models.CharField(choices=[('rent', 'Monthly Rent'), ('deposit', 'Security Deposit'), ('utilities', 'Utilities'), ('maintenance', 'Maintenance'), ('late_fee', 'Late Fee'), ('other', 'Other')], default='rent', help_text='Type of invoice', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Invoice description or itemization', null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('partial', 'Partially Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', help_text='Current status of the invoice', max_length=20)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount paid against this invoice', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('late_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Late payment fee', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('billing_period_start', models.DateField(blank=True, help_text='Start of billing period', null=True)),
                ('billing_period_end', models.DateField(blank=True, help_text='End of billing period', null=True)),
                ('is_recurring', models.BooleanField(default=False, help_text='Is this a recurring invoice?')),
                ('auto_generated', models.BooleanField(default=False, help_text='Was this invoice auto-generated?')),
                ('notes', models.TextField(blank=True, help_text='Additional notes', null=True)),
                ('pdf_file', models.FileField(blank=True, help_text='Generated PDF invoice', null=True, upload_to='invoices/pdf/')),
                ('is_active', models.BooleanField(default=True, help_text='Is this invoice active?')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'db_table': 'finance_invoice',
                'ordering': ['-issue_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_reference', models.CharField(help_text='Unique payment reference', max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount in ZAR', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_date', models.DateField(default=django.utils.timezone.now, help_text='Date payment was received')),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('eft', 'Electronic Funds Transfer'), ('debit_order', 'Debit Order'), ('credit_card', 'Credit Card'), ('cheque', 'Cheque'), ('other', 'Other')], default='bank_transfer', help_text='Method of payment', max_length=20)),
                ('bank_reference', models.CharField(blank=True, help_text='Bank transaction reference', max_length=200, null=True)),
                ('depositor_name', models.CharField(blank=True, help_text='Name of person who made the payment', max_length=200, null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Has this payment been verified?')),
                ('verified_date', models.DateTimeField(blank=True, help_text='Date payment was verified', null=True)),
                ('proof_of_payment', models.FileField(blank=True, help_text='Proof of payment document', null=True, upload_to='payments/proof/')),
                ('notes', models.TextField(blank=True, help_text='Additional payment notes', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is this payment record active?')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(help_text='Invoice this payment relates to', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='finance.invoice')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'finance_payment',
                'ordering': ['-payment_date', '-created_at'],
            },
        ),
    ]
