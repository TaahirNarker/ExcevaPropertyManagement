# Generated by Django 4.2.7 on 2025-08-26 15:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('leases', '0008_remove_lease_lease_status_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('finance', '0005_systemsettings_invoice_amount_paid_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('import_batch', models.CharField(help_text='Batch identifier for CSV import', max_length=100)),
                ('import_date', models.DateTimeField(auto_now_add=True)),
                ('transaction_date', models.DateField()),
                ('description', models.CharField(max_length=500)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('transaction_type', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit')], max_length=20)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('bank_account', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending Reconciliation'), ('reconciled', 'Reconciled'), ('manual_review', 'Manual Review Required'), ('failed', 'Reconciliation Failed')], default='pending', max_length=20)),
                ('tenant_reference', models.CharField(blank=True, help_text='Extracted tenant reference for matching', max_length=100)),
                ('manually_allocated', models.BooleanField(default=False)),
                ('allocation_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('matched_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank_transactions', to='finance.invoice')),
                ('matched_lease', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank_transactions', to='leases.lease')),
            ],
            options={
                'verbose_name': 'Bank Transaction',
                'verbose_name_plural': 'Bank Transactions',
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ManualPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('check', 'Check'), ('bank_transfer', 'Bank Transfer'), ('credit_card', 'Credit Card'), ('other', 'Other')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_date', models.DateField()),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Allocation'), ('allocated', 'Allocated'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('allocated_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('remaining_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manual_payments', to='leases.lease')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Manual Payment',
                'verbose_name_plural': 'Manual Payments',
                'ordering': ['-payment_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocated_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('allocation_type', models.CharField(choices=[('automatic', 'Automatic'), ('manual', 'Manual'), ('csv_import', 'CSV Import')], max_length=20)),
                ('allocation_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allocated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_allocations', to=settings.AUTH_USER_MODEL)),
                ('bank_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='finance.banktransaction')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_allocations', to='finance.invoice')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='finance.manualpayment')),
            ],
            options={
                'verbose_name': 'Payment Allocation',
                'verbose_name_plural': 'Payment Allocations',
                'ordering': ['-allocation_date'],
            },
        ),
        migrations.CreateModel(
            name='CSVImportBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(max_length=100, unique=True)),
                ('filename', models.CharField(max_length=255)),
                ('bank_name', models.CharField(max_length=100)),
                ('import_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partially Completed')], default='processing', max_length=20)),
                ('total_transactions', models.IntegerField(default=0)),
                ('successful_reconciliations', models.IntegerField(default=0)),
                ('manual_review_required', models.IntegerField(default=0)),
                ('failed_transactions', models.IntegerField(default=0)),
                ('error_log', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('imported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='csv_imports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CSV Import Batch',
                'verbose_name_plural': 'CSV Import Batches',
                'ordering': ['-import_date'],
            },
        ),
        migrations.CreateModel(
            name='Adjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjustment_type', models.CharField(choices=[('waiver', 'Waiver'), ('discount', 'Discount'), ('credit', 'Credit'), ('charge', 'Additional Charge'), ('late_fee', 'Late Fee')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Negative for credits, positive for charges', max_digits=12)),
                ('reason', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('applied_date', models.DateTimeField(auto_now_add=True)),
                ('effective_date', models.DateField(help_text='Date when adjustment takes effect')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applied_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applied_adjustments', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustments', to='finance.invoice')),
            ],
            options={
                'verbose_name': 'Adjustment',
                'verbose_name_plural': 'Adjustments',
                'ordering': ['-applied_date'],
            },
        ),
    ]
