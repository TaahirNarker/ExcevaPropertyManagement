# Generated by Django 4.2.7 on 2025-06-05 15:51

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('properties', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name or company name', max_length=200)),
                ('tenant_type', models.CharField(choices=[('individual', 'Individual'), ('company', 'Company'), ('trust', 'Trust'), ('other', 'Other')], default='individual', help_text='Type of tenant', max_length=20)),
                ('id_number', models.CharField(blank=True, help_text='ID number or passport number', max_length=20, null=True)),
                ('company_registration', models.CharField(blank=True, help_text='Company registration number (if applicable)', max_length=50, null=True)),
                ('email', models.EmailField(help_text='Primary email address', max_length=254)),
                ('phone_number', models.CharField(help_text='Primary phone number', max_length=20)),
                ('alternative_phone', models.CharField(blank=True, help_text='Alternative phone number', max_length=20, null=True)),
                ('postal_address', models.TextField(blank=True, help_text='Postal address', null=True)),
                ('employer', models.CharField(blank=True, help_text='Employer name', max_length=200, null=True)),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, help_text='Declared monthly income', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('emergency_contact_name', models.CharField(blank=True, help_text='Emergency contact full name', max_length=200, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, help_text='Emergency contact phone number', max_length=20, null=True)),
                ('id_document', models.FileField(blank=True, help_text='Copy of ID or passport', null=True, upload_to='documents/tenants/id/')),
                ('proof_of_income', models.FileField(blank=True, help_text='Proof of income document', null=True, upload_to='documents/tenants/income/')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the tenant', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is this tenant actively renting?')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tenant',
                'verbose_name_plural': 'Tenants',
                'db_table': 'tenants_tenant',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(help_text='Lease start date')),
                ('end_date', models.DateField(help_text='Lease end date')),
                ('monthly_rent', models.DecimalField(decimal_places=2, help_text='Monthly rental amount in ZAR', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('security_deposit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Security deposit amount in ZAR', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('annual_escalation_rate', models.DecimalField(decimal_places=2, default=Decimal('8.00'), help_text='Annual rent escalation percentage', max_digits=5)),
                ('escalation_date', models.DateField(blank=True, help_text='Date of next rent escalation', null=True)),
                ('rent_due_day', models.PositiveIntegerField(default=1, help_text='Day of month when rent is due (1-31)')),
                ('payment_frequency', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually')], default='monthly', help_text='Payment frequency', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('expired', 'Expired'), ('terminated', 'Terminated'), ('cancelled', 'Cancelled')], default='draft', help_text='Current status of the lease', max_length=20)),
                ('signed_lease', models.FileField(blank=True, help_text='Signed lease agreement', null=True, upload_to='documents/leases/')),
                ('special_terms', models.TextField(blank=True, help_text='Special terms and conditions', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this lease', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is this lease record active?')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(help_text='Tenant for this lease', on_delete=django.db.models.deletion.CASCADE, related_name='leases', to='tenants.tenant')),
                ('unit', models.ForeignKey(help_text='Unit being leased', on_delete=django.db.models.deletion.CASCADE, related_name='leases', to='properties.unit')),
            ],
            options={
                'verbose_name': 'Lease',
                'verbose_name_plural': 'Leases',
                'db_table': 'tenants_lease',
                'ordering': ['-start_date'],
            },
        ),
    ]
