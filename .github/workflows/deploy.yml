name: 🚀 Auto Deploy to Production

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🚀 Deploy to Production Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        script: |
          echo "🚀 Auto-deploy triggered by GitHub push"
          echo "📅 Deployment time: $(date)"
          echo "🔗 Repository: ${{ github.repository }}"
          echo "📝 Commit: ${{ github.sha }}"
          echo "👤 Triggered by: ${{ github.actor }}"
          
          # Set error handling
          set -e
          
          # Navigate to project directory
          echo "📁 Navigating to project directory..."
          cd /var/www/ExcevaPropertyManagement
          
          # Check if directory exists
          if [ ! -d "/var/www/ExcevaPropertyManagement" ]; then
            echo "❌ Project directory not found. Creating it..."
            sudo mkdir -p /var/www/ExcevaPropertyManagement
            sudo chown ubuntu:ubuntu /var/www/ExcevaPropertyManagement
          fi
          
          # Pull latest changes
          echo "📥 Pulling latest changes from GitHub..."
          git pull origin main || {
            echo "❌ Failed to pull changes. Cloning repository..."
            git clone https://github.com/TaahirNarker/ExcevaPropertyManagement.git .
          }
          
          # Check if virtual environment exists
          if [ ! -d "backend/venv" ]; then
            echo "🐍 Creating virtual environment..."
            cd backend
            python3 -m venv venv
            cd ..
          fi
          
          # Activate virtual environment
          echo "🔧 Activating virtual environment..."
          source backend/venv/bin/activate
          
          # Install/update dependencies
          echo "📦 Installing/updating dependencies..."
          pip install -r backend/requirements.txt
          
          # Run database migrations
          echo "🗄️ Running database migrations..."
          python backend/manage.py migrate
          
          # Collect static files
          echo "📁 Collecting static files..."
          python backend/manage.py collectstatic --noinput
          
          # Restart services
          echo "🔄 Restarting services..."
          pm2 restart all || {
            echo "⚠️ PM2 restart failed. Starting services..."
            pm2 start backend/start_production.sh --name "exceva-backend"
            pm2 start "npm run start" --name "exceva-frontend" --cwd frontend
          }
          
          echo "✅ Deployment completed successfully!"
          echo "🌐 Live site: https://propman.exceva.capital"
          
    - name: ✅ Deployment Status
      if: always()
      run: |
        echo "🚀 Deployment Status: ${{ job.status }}"
        echo "📅 Completed at: $(date)"
        echo "🔗 Repository: ${{ github.repository }}"
        echo "📝 Commit: ${{ github.sha }}"
        echo "👤 Triggered by: ${{ github.actor }}"
        
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Deployment completed successfully!"
          echo "🌐 Live site: https://propman.exceva.capital"
        else
          echo "❌ Deployment failed. Check the logs above for details."
        fi
